<?php

//print('<pre>'.print_r().'</pre>');

function autocomplete_form_alter(&$form, &$form_state, $form_id) {

  // Vemos que no se muestre en el backend (edit, webform, results), solo en front
  // Y solo en el nodo que queremos:
  preg_match('/(edit)|(webform)|(results)/',request_uri(), $matches);

  if( empty($matches) && $form['#node']->nid == 298 ) {

      // Provincia
      $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_state_province_id']['#ajax'] = array(
        'callback' => '_cities_update',
        'wrapper' => 'city_div',
        'method' => 'replace',
      );

      // Ciudad
      $province = $form_state['values']['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_state_province_id'];
      $cp = $form_state['values']['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_postal_code'];

      $province_id = (empty($province) || $province == '' ? '0' : $province);
      $postal_code = (empty($cp) || $cp == '' ? '0' : $cp);

      $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_city']['#autocomplete_path'] = 'city/autocomplete/aa/'.$province_id.'/'.$postal_code;
      $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_city']['#prefix'] = '<div id="city_div">';
      $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_city']['#suffix'] = '</div>';
      $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_city']['#ajax'] = array(
          'callback' => '_streets_update',
          'wrapper' => 'street_div',
          'method' => 'replace',
      );
      $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_city']['#description'] =
        t("Province") . " : '" . (!empty($province_id) ? $province_id : t("No cambiada")) . "'</br>" .
        t("CP") . " : '" . (!empty($postal_code) ? $postal_code : t("No cambiado")) . "'";

      // Calle
      $city_id = $form_state['values']['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_city']; // default

      $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_street_address']['#autocomplete_path'] = 'street/autocomplete/'.$city_id;
      $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_street_address']['#prefix'] = '<div id="street_div">';
      $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_street_address']['#suffix'] = '</div>';
      $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_street_address']['#description'] = t("City") . " : '"
        . (!empty($city_id) ? $city_id : t("No cambiada")) . "'";

      // CÃ³digo Postal
      $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_postal_code']['#ajax'] = array(
          'callback' => '_postal_code_updater',
          'wrapper' => 'city_div',
          'method' => 'replace',
      );
  }
  return $form;
}


/********** Callbacks *************/

function _postal_code_updater($form, &$form_state){

    //provincia a partir de cp
    $cp = $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_postal_code']['#value'];
    $province_id = substr($cp,0,2);

    $result = db_select('correos_provincias', 'p')
      ->fields('p', array('id','name'))
      ->condition('province_id', db_like($province_id), '=')
      ->execute();

      $record = $result->fetchAssoc();

    $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_city']['#description'].=
      "</br>". t("Province_id") . " : '"
      . (!empty($record) ? $record->id : t("No hay")) . "'";
    //$result = _cities_update($form, &$form_state);

    return $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_city'];

}

function _cities_update($form, &$form_state){
    // vaciar ciudad y calle
    $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_city']['#value'] = '';
    $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_street_address']['#value'] = '';
    // leemos provincia del formulario
    $province = ['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_state_province_id'];
    $province_id = (empty($province) || $province == '' ? '0' : $province);
    // leemos cp del formulario
    $cp = ['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_postal_code'];
    $postal_code = (empty($cp) || $cp == '' ? '0' : $cp);
    // cambiamos el autocompletado
    $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_city']['#autocomplete_path'] = 'city/autocomplete/aa/'.$province_id.'/'.$postal_code;
    return $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_city'];
}

function _streets_update($form, &$form_state){
    $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_street_address']['#value']='';
    $city_id = ['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_city'];
    $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_street_address']['#autocomplete_path'] = 'street/autocomplete/'.$city_id;
    return $form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_address_street_address'];
}


/*********** Autocomplete Paths *************/

function autocomplete_menu() {

  $items['province/autocomplete'] = array(
    'page callback' => '_autocomplete_province',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['city/autocomplete/%/%'] = array(
    'page callback' => '_autocomplete_cities_cp',
    'access arguments' => array('access content'),
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
  );

  $items['street/autocomplete/%'] = array(
    'page callback' => '_autocomplete_streets',
    'access arguments' => array('access content'),
    'page arguments' => array(2),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/********** Functions of Autocomplete Paths *************/

function _autocomplete_province($string=''){
    $matches = array();
    $result = db_select('correos_provincias', 'p')
      ->fields('p', array('id','name'))
      ->condition('name', db_like($string) . '%', 'LIKE')
      ->execute();
    // save the query to matches
    foreach ($result as $row) {
      $matches[$row->id] = check_plain($row->name);
    }
    // Return the result to the form in json
    drupal_json_output($matches);
}

function _autocomplete_streets($city=1, $string=''){
    $matches = array();
    $result = db_select('correos_vias', 'v')
    //$result->join('correos_provincias', 'p', 'c.province_id=p.id');
      ->fields('v', array('name'))
      ->condition('name', db_like($string) . '%', 'LIKE')
      ->condition('city_id', db_like($city), '=')
      ->execute();
    // save the query to matches
    foreach ($result as $row) {
      $matches[$row->name] = check_plain($row->name);
    }
    // Return the result to the form in json
    drupal_json_output($matches);
}

function _autocomplete_cities_cp($province=0, $postal_code=0, $string=''){
    $matches = array();
    $query1 = db_select('correos_ciudades', 'c');

    $query1->join('correos_codpostales', 'cp', 'cp.city_id = c.id');

    if($province > 0){
      $query1->condition('c.province_id', db_like($province), '=');
    }

    if($postal_code > 0){
      $query1->condition('cp.codigo', db_like($postal_code), 'LIKE');
    }

    if($string <> ''){
      $query1->condition('c.name', db_like($string) . '%', 'LIKE');
    }

    $result = $query1
          ->fields('c', array('id','name'))
          ->execute();

    // save the query to matches
    foreach ($result as $row) {
      $matches[$row->id] = check_plain($row->name);
    }
    // Return the result to the form in json
    drupal_json_output($matches);
}
